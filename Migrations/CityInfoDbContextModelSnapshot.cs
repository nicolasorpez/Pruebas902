// <auto-generated />
using IDGS902UT.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IDGS902UT.API.Migrations
{
    [DbContext(typeof(CityInfoDbContext))]
    partial class CityInfoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IDGS902UT.API.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "La bella calurosa!!!",
                            Name = "Iguala de la Independencia"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ciudad Colonial",
                            Name = "Taxco de Alarcon"
                        },
                        new
                        {
                            Id = 3,
                            Description = "La bahía más hermosa de México",
                            Name = "Acapulco de Juarez"
                        });
                });

            modelBuilder.Entity("IDGS902UT.API.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PoinstOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "La mas alta de Mexico",
                            Name = "Aasta Monumental"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Pa' la cruda",
                            Name = "Laguna de Tuxpan"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 1,
                            Description = "Cuna de la Bandera Naciona",
                            Name = "Centro Hitórico"
                        });
                });

            modelBuilder.Entity("IDGS902UT.API.Entities.PointOfInterest", b =>
                {
                    b.HasOne("IDGS902UT.API.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("IDGS902UT.API.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
